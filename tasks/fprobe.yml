---

- name: Install fprobe from packages
  ansible.builtin.package:
    name: "{{ fprobe_pkg }}"
    state: "present"
  register: pkg_result
  until: pkg_result is success

- name: Debian | update fprobe config
  ansible.builtin.replace:
    dest: "/etc/default/fprobe"
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
    backup: "yes"
  with_items:
    - { re: '^INTERFACE=.*', rep: "INTERFACE=\"{{ fprobe_if }}\"" }
    - { re: '^FLOW_COLLECTOR=.*', rep: "FLOW_COLLECTOR=\"{{ fprobe_flow_collector }}\"" }
    - { re: '^OTHER_ARGS=.*', rep: "OTHER_ARGS=\"{{ fprobe_args }}\"" }
  when: ansible_os_family == 'Debian'
  notify:
    - Restart fprobe
- name: RedHat | update fprobe config
  ansible.builtin.lineinfile:
    dest: /etc/sysconfig/fprobe
    regexp: "{{ item.re }}"
    line: "{{ item.rep }}"
    mode: '0644'
    backup: yes
    create: yes
  with_items:
    - { re: '^FLOW_COLLECTOR=.*', rep: "FLOW_COLLECTOR=\"{{ fprobe_flow_collector }}\"" }
    # - { re: '^OTHER_ARGS=.*', rep: "OTHER_ARGS=\"{{ fprobe_args }}\"" }
  when: ansible_os_family == 'RedHat'
  notify:
    - Restart fprobe

# - block:
#     - name: RedHat | check if fprobe is running
#       ansible.builtin.shell: "ps axu |grep fprobe-ulog"
#       register: ps
#       changed_when: false
#     - name: RedHat | start fprobe manually
#       ansible.builtin.command: "fprobe-ulog -c /var/tmp {{ fprobe_flow_collector }}"
#   when: >
#     ansible_os_family == 'RedHat' and ps is defined and ps.stdout is defined and
#     ps.stdout.find(" fprobe-ulog ") == -1

- name: Systemd service manager
  when: ansible_service_mgr == 'systemd'
  block:
    - name: Service unit
      block:
        - name: Install fprobe systemd configuration
          ansible.builtin.template:
            src: "systemd-fprobe-ulog.service.j2"
            dest: "/lib/systemd/system/{{ fprobe_svc }}.service"
            mode: '0644'
            backup: yes
          register: systemdconf
      rescue:
        - name: Include immutable
          ansible.builtin.include_tasks: immutable.yml
          vars:
            target_dir: /lib/systemd/system
            state: pre
        - name: Install fprobe systemd configuration
          ansible.builtin.template:
            src: "systemd-fprobe-ulog.service.j2"
            dest: "/lib/systemd/system/{{ fprobe_svc }}.service"
            mode: '0644'
            backup: yes
        - name: Include immutable
          ansible.builtin.include_tasks: immutable.yml
          vars:
            target_dir: /lib/systemd/system
            state: post
- name: Init.d service manager
  when: ansible_os_family == 'RedHat' and ansible_service_mgr != 'systemd'
  block:
    - name: Init.d file
      block:
        - name: Add fprobe init.d script
          ansible.builtin.template:
            src: init.d-fprobe.j2
            dest: /etc/rc.d/init.d/fprobe-ulog
            mode: '0755'
            backup: yes
          register: initdconf
      rescue:
        - name: Include immutable
          ansible.builtin.include_tasks: immutable.yml
          vars:
            target_dir: /etc/rc.d/init.d
            state: pre
        - name: Install fprobe systemd configuration
          ansible.builtin.template:
            src: init.d-fprobe.j2
            dest: /etc/rc.d/init.d/fprobe-ulog
            mode: '0755'
            backup: yes
        - name: Include immutable
          ansible.builtin.include_tasks: immutable.yml
          vars:
            target_dir: /etc/rc.d/init.d
            state: post

- name: Ensure service is enabled and started
  ansible.builtin.service:
    name: "{{ fprobe_svc }}"
    state: "started"
    enabled: "yes"

- name: Ensure service is started - again
  ansible.builtin.service:
    name: "{{ fprobe_svc }}"
    state: "started"
